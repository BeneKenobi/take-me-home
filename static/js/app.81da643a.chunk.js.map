{"version":3,"sources":["Styles.ts","App.tsx"],"names":["styles","StyleSheet","create","page","flex","backgroundColor","alignItems","justifyContent","header","color","fontSize","text","debug","mapImage","width","height","input","padding","marginTop","marginBottom","container","scrollView","marginHorizontal","keyboardContainer","window","Dimensions","get","screen","formatTravelTime","value","humanizeDuration","largest","delimiter","units","round","GoogleMapsImage","props","location","googleApiKey","destination","undefined","size","Math","min","params","scale","key","markers","path","lat","lng","imageUri","Object","entries","forEach","_ref","_ref2","_slicedToArray","paramsKey","paramsValue","_jsx","Image","style","source","uri","TravelTimeShareButton","time","mode","shareText","buttonTitle","Button","onPress","messageToShare","result","_regeneratorRuntime","async","_context","prev","next","awrap","Share","share","message","sent","action","sharedAction","activityType","dismissedAction","t0","Alert","alert","stop","Promise","title","_Constants$manifest3","_Constants$manifest3$","_Constants$manifest","_Constants$manifest$e","_Constants$manifest2","_Constants$manifest2$","Platform","OS","Constants","manifest","extra","googleApiKeyIos","googleApiKeyAndroid","googleApiKeyWeb","getGoogleApiKey","App","_useState","useState","_useState2","setLocation","_useState3","_useState4","locationStatus","setLocationStatus","useEffect","_await$Location$reque","_context5","Location","status","resultLocation","_context4","coords","latitude","longitude","_useState5","_useState6","destinationText","setDestinationText","_useState7","_useState8","destinationTextSaved","setDestinationTextSaved","_context3","AsyncStorage","getItem","abrupt","getDestinationTextFromStorage","then","storedDestinationText","_useState9","_useState10","dimensions","setDimensions","subscription","addEventListener","_ref3","remove","_useState11","_useState12","destinationCoords","setDestinationCoords","request","response","_response$results$","_response$results$$ge","_context6","length","fetch","json","results","geometry","_useState13","driving","walking","bicycling","transit","_useState14","travelTime","setTravelTime","_i","_Object$keys","_response","_response$rows$","_response$rows$$eleme","_response$rows$$eleme2","_context7","keys","method","headers","Accept","body","JSON","stringify","origin","rows","elements","duration","_objectSpread","_defineProperty","_jsxs","SafeAreaView","children","Text","StatusBar","hidden","KeyboardAvoidingView","behavior","ScrollView","View","TextInput","onChangeText","_context2","setItem"],"mappings":"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","file":"static/js/app.81da643a.chunk.js","sourcesContent":["import { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n  page: {\n    flex: 1,\n    backgroundColor: '#000',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  header: {\n    flex: 1,\n    color: 'white',\n    fontSize: 50,\n  },\n  text: {\n    color: 'white',\n    fontSize: 50,\n  },\n  debug: {\n    color: 'white',\n    fontSize: 10,\n  },\n  mapImage: {\n    width: 400,\n    height: 400,\n  },\n  input: {\n    width: 250,\n    height: 44,\n    padding: 10,\n    marginTop: 10,\n    marginBottom: 10,\n    backgroundColor: '#e8e8e8',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 20,\n    backgroundColor: '#000',\n    justifyContent: 'center',\n  },\n  scrollView: {\n    backgroundColor: '#000',\n    marginHorizontal: 5,\n  },\n  keyboardContainer: {\n    flex: 1,\n  },\n});\n\nexport default styles;\n","import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {\n  Share,\n  Text,\n  SafeAreaView,\n  Image,\n  Dimensions,\n  TextInput,\n  View,\n  Button,\n  Alert,\n  ScrollView,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport * as Location from 'expo-location';\nimport Constants from 'expo-constants';\nimport humanizeDuration from 'humanize-duration';\nimport styles from './Styles';\n\nconst window = Dimensions.get('window');\nconst screen = Dimensions.get('screen');\n\nconst share = async (messageToShare: string) => {\n  try {\n    const result = await Share.share({\n      message: `${messageToShare}`,\n    });\n    if (result.action === Share.sharedAction) {\n      if (result.activityType) {\n        // shared with activity type of result.activityType\n      } else {\n        // shared\n      }\n    } else if (result.action === Share.dismissedAction) {\n      // dismissed\n    }\n  } catch (e) {\n    Alert.alert('Error while sharing');\n  }\n};\n\nconst setDestinationTextInStorage = async (value: string) => {\n  try {\n    await AsyncStorage.setItem('destinationText', value);\n  } catch (e) {\n    // save error\n  }\n  Alert.alert('Gespeichert');\n};\n\nconst getDestinationTextFromStorage = async (): Promise<string> => {\n  try {\n    const value = await AsyncStorage.getItem('destinationText');\n    if (value !== null) {\n      return value;\n    }\n  } catch (e) {\n    // error reading value\n  }\n  return '';\n};\n\nconst formatTravelTime = (value: number) => {\n  return humanizeDuration(value * 1000, {\n    largest: 2,\n    delimiter: ' and ',\n    units: ['d', 'h', 'm'],\n    round: true,\n  });\n};\n\nconst GoogleMapsImage = (props: {\n  location:\n    | {\n        lat: number,\n        lng: number,\n      }\n    | undefined,\n  width: number,\n  height: number,\n  googleApiKey: string,\n  destination:\n    | {\n        lat: number,\n        lng: number,\n      }\n    | undefined,\n}) => {\n  const { location, width, height, googleApiKey, destination } = props;\n  if (location === undefined) {\n    return null;\n  }\n  const size = Math.min(width, height, 400);\n  const params: {\n    size: string,\n    scale: number,\n    key: string,\n    markers: string,\n    path: string,\n  } = {\n    size: `${size}x${size}`,\n    scale: 2,\n    key: googleApiKey,\n    markers: '',\n    path: '',\n  };\n  let markers = `${location.lat},${location.lng}`;\n  if (destination !== undefined) {\n    markers += `|${destination.lat},${destination.lng}`;\n    params.path = `color:0x0000ff80|weight:5|${location.lat},${location.lng}|${destination.lat},${destination.lng}`;\n  }\n  params.markers = markers;\n  let imageUri = 'https://maps.googleapis.com/maps/api/staticmap?';\n  Object.entries(params).forEach(([paramsKey, paramsValue]) => {\n    imageUri += `${paramsKey}=${paramsValue}&`;\n  });\n  return (\n    <Image style={{ width: size, height: size }} source={{ uri: imageUri }} />\n  );\n};\n\nconst TravelTimeShareButton = (props: {\n  destination: string,\n  time: number,\n  mode: string,\n}) => {\n  const { time } = props;\n  const { destination } = props;\n  const { mode } = props;\n  let shareText = '';\n  let buttonTitle = '';\n  switch (mode) {\n    case 'driving': {\n      shareText = `I need ${formatTravelTime(\n        time\n      )} to drive to ${destination} 🚗`;\n      buttonTitle = `🚗 ${formatTravelTime(time)}`;\n      break;\n    }\n    case 'walking': {\n      shareText = `I need ${formatTravelTime(\n        time\n      )} to walk to ${destination} 🚶`;\n      buttonTitle = `🚶 ${formatTravelTime(time)}`;\n      break;\n    }\n    case 'transit': {\n      shareText = `I need ${formatTravelTime(\n        time\n      )} with public transport to ${destination} 🚌`;\n      buttonTitle = `🚌 ${formatTravelTime(time)}`;\n      break;\n    }\n    case 'bicycling': {\n      shareText = `I need ${formatTravelTime(\n        time\n      )} on my bike to ${destination} 🚴`;\n      buttonTitle = `🚴 ${formatTravelTime(time)}`;\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return (\n    <Button\n      onPress={() => share(shareText)}\n      title={buttonTitle}\n      color=\"#841584\"\n    />\n  );\n};\n\nconst getGoogleApiKey = () => {\n  if (Platform.OS === 'ios') {\n    return Constants?.manifest?.extra?.googleApiKeyIos;\n  }\n  if (Platform.OS === 'android') {\n    return Constants?.manifest?.extra?.googleApiKeyAndroid;\n  }\n  return Constants?.manifest?.extra?.googleApiKeyWeb;\n};\n\nconst googleApiKey = getGoogleApiKey();\n\nconst App = () => {\n  const [location, setLocation] = useState<\n    { lat: number, lng: number } | undefined\n  >(undefined);\n  const [locationStatus, setLocationStatus] = useState('Loading...');\n  useEffect(() => {\n    (async () => {\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        setLocationStatus(\n          'Permission to access location was denied. Please change your settings manually to use this app.'\n        );\n      } else {\n        setLocationStatus('Getting your location...');\n        (async () => {\n          const resultLocation = await Location.getCurrentPositionAsync({});\n          setLocation({\n            lat: resultLocation.coords.latitude,\n            lng: resultLocation.coords.longitude,\n          });\n          setLocationStatus('done');\n        })();\n      }\n    })();\n  }, []);\n\n  const [destinationText, setDestinationText] = useState('');\n  const [destinationTextSaved, setDestinationTextSaved] = useState('');\n  useEffect(() => {\n    getDestinationTextFromStorage().then((storedDestinationText) => {\n      setDestinationText(storedDestinationText);\n      setDestinationTextSaved(storedDestinationText);\n    });\n  }, []);\n\n  const [dimensions, setDimensions] = useState({ window, screen });\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener(\n      'change',\n      // eslint-disable-next-line no-shadow\n      ({ window, screen }) => {\n        setDimensions({ window, screen });\n      }\n    );\n    return () => subscription?.remove();\n  });\n\n  const [destinationCoords, setDestinationCoords] = useState<\n    { lat: number, lng: number } | undefined\n  >(undefined);\n  useEffect(() => {\n    (async () => {\n      if (destinationTextSaved.length > 0) {\n        const request = await fetch(\n          `https://maps.googleapis.com/maps/api/geocode/json?address=${destinationTextSaved}&key=${googleApiKey}`\n        );\n        const response = await request.json();\n        if (response.results.length > 0) {\n          if (\n            response.status === 'OK' &&\n            response.results[0]?.geometry?.location !== undefined\n          ) {\n            setDestinationCoords(response.results[0].geometry.location);\n          }\n        }\n      }\n    })();\n  }, [destinationTextSaved]);\n\n  const [travelTime, setTravelTime] = useState<{\n    driving: number | undefined,\n    walking: number | undefined,\n    bicycling: number | undefined,\n    transit: number | undefined,\n  }>({\n    driving: undefined,\n    walking: undefined,\n    bicycling: undefined,\n    transit: undefined,\n  });\n  useEffect(() => {\n    (async () => {\n      if (\n        destinationCoords !== undefined &&\n        locationStatus === 'done' &&\n        location !== undefined\n      ) {\n        let results: {\n          driving: number | undefined,\n          walking: number | undefined,\n          bicycling: number | undefined,\n          transit: number | undefined,\n        } = {\n          driving: undefined,\n          walking: undefined,\n          bicycling: undefined,\n          transit: undefined,\n        };\n        // we need a for loop because we need to await each request\n        // eslint-disable-next-line no-restricted-syntax\n        for (const mode of Object.keys(results)) {\n          // eslint-disable-next-line no-await-in-loop\n          const request = await fetch(\n            'https://europe-west3-take-me-home-334010.cloudfunctions.net/getTravelDurations',\n            {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                origin: `${location.lat},${location.lng}`,\n                destination: `${destinationCoords.lat},${destinationCoords.lng}`,\n                mode,\n                key: googleApiKey,\n              }),\n            }\n          );\n          // eslint-disable-next-line no-await-in-loop\n          const response = await request.json();\n          if (response.rows.length > 0) {\n            if (response.status === 'OK') {\n              if (\n                response?.rows[0]?.elements[0]?.duration?.value !== undefined\n              ) {\n                results = {\n                  ...results,\n                  [mode]: response.rows[0].elements[0].duration.value,\n                };\n              }\n            }\n          }\n        }\n        setTravelTime(results);\n      }\n    })();\n  }, [destinationCoords, location, locationStatus]);\n\n  if (googleApiKey === undefined) {\n    return (\n      <SafeAreaView style={styles.page}>\n        <Text style={styles.text}>API Key Error</Text>\n        {/* eslint-disable-next-line react/style-prop-object */}\n        <StatusBar style=\"light\" hidden={false} />\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      style={styles.keyboardContainer}\n    >\n      <SafeAreaView style={styles.page}>\n        <ScrollView style={styles.scrollView}>\n          <Text style={styles.header}>take me home</Text>\n          <View style={styles.container}>\n            {locationStatus !== 'done' ? (\n              <Text style={styles.debug}>{locationStatus}</Text>\n            ) : null}\n            <GoogleMapsImage\n              width={dimensions.window.width}\n              height={dimensions.window.height}\n              googleApiKey={googleApiKey}\n              location={location}\n              destination={destinationCoords}\n            />\n            <Text style={{ color: 'white' }}>\n              Please insert your destination\n            </Text>\n            <TextInput\n              style={styles.input}\n              onChangeText={setDestinationText}\n              value={destinationText}\n            />\n            <Button\n              onPress={() => {\n                setDestinationTextInStorage(destinationText);\n                setDestinationTextSaved(destinationText);\n              }}\n              title=\"💾 Save Destination\"\n              color=\"#841584\"\n            />\n            {travelTime.walking !== undefined ? (\n              <TravelTimeShareButton\n                destination={destinationTextSaved}\n                mode=\"walking\"\n                time={travelTime.walking}\n              />\n            ) : null}\n            {travelTime.bicycling !== undefined ? (\n              <TravelTimeShareButton\n                destination={destinationTextSaved}\n                mode=\"bicycling\"\n                time={travelTime.bicycling}\n              />\n            ) : null}\n            {travelTime.transit !== undefined ? (\n              <TravelTimeShareButton\n                destination={destinationTextSaved}\n                mode=\"transit\"\n                time={travelTime.transit}\n              />\n            ) : null}\n            {travelTime.driving !== undefined ? (\n              <TravelTimeShareButton\n                destination={destinationTextSaved}\n                mode=\"driving\"\n                time={travelTime.driving}\n              />\n            ) : null}\n            {/* eslint-disable-next-line react/style-prop-object */}\n            <StatusBar style=\"light\" hidden={false} />\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n    </KeyboardAvoidingView>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}